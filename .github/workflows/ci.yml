name: CI/CD
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: webapp
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '10.11.0'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: webapp/.nvmrc
          cache: 'pnpm'
          cache-dependency-path: webapp/pnpm-lock.yaml
         
      - name: Install dependencies
        run: pnpm install
        
      - name: Run linter
        run: pnpm lint
        
      - name: Type check
        run: pnpm type-check
        
      - name: Run tests
        run: pnpm test
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ env.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: webapp
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '10.11.0'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: webapp/.nvmrc
          cache: 'pnpm'
          cache-dependency-path: webapp/pnpm-lock.yaml
         
      - name: Install dependencies
        run: pnpm install
        
      - name: Pull Vercel Environment Information
        run: pnpm vercel:pull -- --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build with Vercel
        run: pnpm vercel:build -- --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ env.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Deploy to Vercel
        run: pnpm vercel:deploy -- --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ env.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ env.VERCEL_PROJECT_ID }}